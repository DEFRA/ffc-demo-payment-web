environment: development
image: ffc-demo-payment-web
name: ffc-demo-payment-web
namespace: ffc-demo
workstream: ffc-demo

labels: {}

appInsights:
  key:

oidcProvider: dev

okta:
  domain:
  clientId: dummy
  authorizationServerId: dummy
  clientSecret: dummy

b2c:
  url:
  clientId: dummy
  clientSecret: dummy

containerConfigMap:
   name: ffc-demo-payment-web-config-map

containerSecret:
  name: ffc-demo-payment-web-container-secret
  type: Opaque

service:
  port: 80
  type: ClusterIP

container:
  requestMemory: 60Mi
  requestCpu: 60m
  limitMemory: 80Mi
  limitCpu: 80m
  imagePullPolicy: IfNotPresent
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  staticCacheTimeoutMillis: 54000
  restClientTimeoutMillis: 20000
  paymentServiceUrl: http://ffc-demo-payment-service.ffc-demo
  port: 3000
  cookiePassword: secret
  siteUrl:
  googleTagManagerKey: GTM-N5QK7RL

ingress:
  class: nginx
  endpoint: ffc-demo
  server: example.com

deployment:
  restartPolicy: Always
  priorityClassName: low
  replicas: 1
  minReadySeconds: 5
  redeployOnChange: update this field to force a change
  imagePullSecret:
  runAsNonRoot: true
  runAsUser: 1000
  useLinkerd: true

readinessProbe:
  path: /healthy
  port: 3000
  initialDelaySeconds: 20
  periodSeconds: 10
  failureThreshold: 3

livenessProbe:
  path: /healthz
  port: 3000
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3
